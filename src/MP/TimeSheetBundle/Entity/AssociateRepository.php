<?php

namespace MP\TimeSheetBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * AssociateRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AssociateRepository extends EntityRepository
{
    // Associate joined with AssociateMission and Mission Tables

    public function findAllAssociates()
    {
        $result = $this->createQueryBuilder('a')
            ->select('a')
            ->leftJoin('a.mission', 'am')
            ->where('am.status = :stat')
            ->leftJoin('am.mission', 'm')
            ->setParameter(':stat', 'en cours')
            ->addSelect('am')
            ->addSelect('m')
            ->getQuery()
            ->getResult();

        return $result;
    }

    // find mission-associate from Mission id
    public function findAssociates($id)
    {
        $result = $this->createQueryBuilder('a')
            ->select('a')
            ->innerJoin('a.mission', 'm')
            ->where('m.id = :id')
            ->setParameter(':id', $id)
            ->getQuery()
            ->getResult();

        return $result;

    }


    public function findAssociate($id)
    {
        $result = $this->createQueryBuilder('a')
            ->select('a')
            ->where('a.id = :id')
            ->setParameter(':id', $id);

        return $result;
    }

    public function findNoMissionAssociates()
    {
        $result = $this->createQueryBuilder('a')
            ->select('DISTINCT a')
            ->leftJoin('a.mission', 'm')
            ->where('m.status != :st')
            ->orWhere('m.id is NULL')
            ->andWhere('a.post = :collab')
            ->setParameter(':collab', 'collaborateur')
            ->setParameter(':st', 'en cours');

        return $result;
    }

    public function findNoMissionChiefs()
    {
        $result = $this->createQueryBuilder('a')
            ->select('a')
            ->leftJoin('a.mission', 'm')
            ->where('m.status != :st')
            ->orWhere('m.id is NULL')
            ->andWhere('a.post = :chief')
            ->setParameter(':chief', 'chef de mission')
            ->setParameter(':st', 'en cours');

        return $result;
    }

    public function findAllManagers()
    {
        $result = $this->createQueryBuilder('a')
            ->select('a')
            ->where('a.post = :man')
            ->setParameter(':man', 'manager');

        return $result;
    }

    public function findAllSignataries()
    {
        $result = $this->createQueryBuilder('a')
            ->select('a')
            ->where('a.post = :sig')
            ->setParameter(':sig', 'signataire');

        return $result;
    }

    public function findNoMissions()
    {
        $result = $this->createQueryBuilder('a')
            ->select('a')
            ->leftJoin('a.mission', 'm')
            ->Where('m.id is NULL');


        return $result;
    }
}
